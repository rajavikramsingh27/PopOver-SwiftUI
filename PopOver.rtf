{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\froman\fcharset0 Palatino-Bold;}
{\colortbl;\red255\green255\blue255;\red108\green54\blue169;\red255\green255\blue255;\red0\green0\blue0;
\red28\green70\blue74;\red155\green35\blue147;\red11\green79\blue121;\red57\green0\blue160;\red15\green104\blue160;
\red50\green109\blue116;\red196\green26\blue22;\red28\green0\blue207;\red93\green108\blue121;}
{\*\expandedcolortbl;;\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c10981\c27276\c28869;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5882\c40784\c62745;
\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c36526\c42188\c47515;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13640\viewh11840\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\fs28 \cf2 \cb3 #Preview\cf4  \{\
    \cf5 FeedbackView\cf4 ()\
\}\
\

\f1\b \cf6 struct
\f0\b0 \cf4  \cf7 FeedbackView\cf4 : \cf8 View\cf4  \{\
    \cf8 @State\cf4  
\f1\b \cf6 private
\f0\b0 \cf4  
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 selectedEmoji\cf4 : \cf5 Emoji\cf4 ? = 
\f1\b \cf6 nil
\f0\b0 \cf4 \
    \cf8 @State\cf4  
\f1\b \cf6 private
\f0\b0 \cf4  
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 isEmojiPopoverPresented\cf4 : \cf8 Bool\cf4  = 
\f1\b \cf6 false
\f0\b0 \cf4 \
    \
    
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 body\cf4 : 
\f1\b \cf6 some
\f0\b0 \cf4  \cf8 View\cf4  \{\
        \cf8 Button\cf4 (\cf2 action\cf4 : \{\
            \cf10 isEmojiPopoverPresented\cf4 .\cf2 toggle\cf4 ()\
        \}) \{\
            \cf8 HStack\cf4  \{\
                \cf8 Text\cf4 (\cf10 selectedEmoji\cf4  == 
\f1\b \cf6 nil
\f0\b0 \cf4  ? \cf11 "Or Select an Emoji"\cf4  : \cf11 "You selected: "\cf4 )\
                \cf8 Text\cf4 (\cf10 selectedEmoji\cf4 ?.\cf10 emojiSting\cf4  ?? \cf11 ""\cf4 )\
                    .\cf2 font\cf4 (.\cf2 largeTitle\cf4 )\
            \}\
        \}\
        .\cf2 popover\cf4 (\cf2 isPresented\cf4 : \cf10 $isEmojiPopoverPresented\cf4 ,\
                 \cf2 attachmentAnchor\cf4 : .\cf2 point\cf4 (.\cf2 trailing\cf4 ),\
                 \cf2 arrowEdge\cf4 : .\cf2 trailing\cf4 ,\
                 \cf2 content\cf4 : \{\
            \cf5 EmojiSelectorView\cf4 (\cf10 selection\cf4 : \cf10 $selectedEmoji\cf4 , \cf10 isEmojiPopoverPresented\cf4 : \cf10 $isEmojiPopoverPresented\cf4 )\
                .\cf2 frame\cf4 (\cf2 minWidth\cf4 : \cf12 300\cf4 , \cf2 maxHeight\cf4 : \cf12 570\cf4 )\
\cf13 //              .presentationCompactAdaptation(.none)\cf4 \
        \})\
    \}\
\}\
\

\f1\b \cf6 struct
\f0\b0 \cf4  \cf7 EmojiSelectorView\cf4 : \cf8 View\cf4  \{\
    \
    \cf8 @Binding\cf4  
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 selection\cf4 : \cf5 Emoji\cf4 ?\
    \cf8 @Binding\cf4  
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 isEmojiPopoverPresented\cf4 : \cf8 Bool\cf4 \
    \
    
\f1\b \cf6 let
\f0\b0 \cf4  \cf9 columns\cf4  = [\cf8 GridItem\cf4 (.adaptive(minimum: \cf12 44\cf4 ), \cf2 spacing\cf4 : \cf12 10\cf4 )]\
    
\f1\b \cf6 let
\f0\b0 \cf4  \cf9 emojis\cf4 : [\cf5 Emoji\cf4 ]  = \cf5 Emoji\cf4 .\cf10 examples\cf4 ()\
    \
    
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 body\cf4 : 
\f1\b \cf6 some
\f0\b0 \cf4  \cf8 View\cf4  \{\
        \cf8 VStack\cf4 (\cf2 alignment\cf4 : .\cf2 leading\cf4 ) \{\
            \cf8 Text\cf4 (\cf11 "Select an Emoji"\cf4 )\
                .\cf2 font\cf4 (.\cf2 title3\cf4 )\
                .\cf2 padding\cf4 (.\cf2 horizontal\cf4 )\
            \
            \cf8 Divider\cf4 ()\
            \
            \cf8 ScrollView\cf4  \{\
                \cf8 LazyVGrid\cf4 (\cf2 columns\cf4 : \cf10 columns\cf4 ) \{\
                    \cf8 ForEach\cf4 (\cf10 emojis\cf4 ) \{ emoji 
\f1\b \cf6 in
\f0\b0 \cf4 \
                        \cf8 ZStack\cf4  \{\
                            emoji == \cf10 selection\cf4  ? \cf8 Color\cf4 .\cf2 blue\cf4  : \cf8 Color\cf4 .\cf2 clear\cf4 \
                            \cf8 Text\cf4 (emoji.\cf10 emojiSting\cf4 )\
                                .\cf2 font\cf4 (.\cf2 title\cf4 )\
                                .\cf2 padding\cf4 (\cf12 5\cf4 )\
                                .\cf2 onTapGesture\cf4  \{\
                                    \cf10 selection\cf4  = emoji\
                                    \
                                    \cf10 isEmojiPopoverPresented\cf4  = 
\f1\b \cf6 false
\f0\b0 \cf4 \
                                \}\
                        \}\
                    \}\
                \}.\cf2 padding\cf4 ()\
            \}\
        \}\
        .\cf2 padding\cf4 (.\cf2 vertical\cf4 )\
    \}\
\}\
\

\f1\b \cf6 struct
\f0\b0 \cf4  \cf7 Emoji\cf4 : \cf8 Identifiable\cf4 , \cf8 Equatable\cf4  \{\
    
\f1\b \cf6 let
\f0\b0 \cf4  \cf9 value\cf4 : \cf8 Int\cf4 \
    
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 emojiSting\cf4 : \cf8 String\cf4  \{\
        
\f1\b \cf6 guard
\f0\b0 \cf4  
\f1\b \cf6 let
\f0\b0 \cf4  scalar = \cf8 UnicodeScalar\cf4 (\cf10 value\cf4 ) 
\f1\b \cf6 else
\f0\b0 \cf4  \{ 
\f1\b \cf6 return
\f0\b0 \cf4  \cf11 "?"\cf4  \}\
        
\f1\b \cf6 return
\f0\b0 \cf4  \cf8 String\cf4 (\cf8 Character\cf4 (scalar))\
    \}\
    
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 valueString\cf4 : \cf8 String\cf4  \{\
        \cf8 String\cf4 (\cf2 format\cf4 : \cf11 "%x"\cf4 , \cf10 value\cf4 )\
    \}\
    \
    
\f1\b \cf6 var
\f0\b0 \cf4  \cf9 id\cf4 : \cf8 Int\cf4  \{\
        
\f1\b \cf6 return
\f0\b0 \cf4  \cf10 value\cf4 \
    \}\
    \
    
\f1\b \cf6 static
\f0\b0 \cf4  
\f1\b \cf6 func
\f0\b0 \cf4  \cf9 examples\cf4 () -> [\cf5 Emoji\cf4 ] \{\
        
\f1\b \cf6 let
\f0\b0 \cf4  values = \cf12 0x1f600\cf4 ...\cf12 0x1f64f\cf4 \
        
\f1\b \cf6 return
\f0\b0 \cf4  values.\cf2 map\cf4  \{  \cf5 Emoji\cf4 (\cf10 value\cf4 : $0) \}\
    \}\
\}\
}